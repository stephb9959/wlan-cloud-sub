openapi: 3.0.1
info:
  title: OpenWiFi User Portal
  description: API describing User Self Care interaction with OpenWifi.
  version: 1.0.0
  license:
    name: BSD3
    url: https://github.com/Telecominfraproject/wlan-cloud-ucentralgw/blob/master/LICENSE

servers:
  - url: 'https://localhost:16006/api/v1'

security:
  - bearerAuth: []
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            properties:
              ErrorCode:
                type: integer
              ErrorDetails:
                type: string
              ErrorDescription:
                type: string

    Unauthorized:
      description: The requested does not have sufficient rights to perform the operation.
      content:
        application/json:
          schema:
            properties:
              ErrorCode:
                type: integer
                enum:
                  - 0     # Success
                  - 1     # PASSWORD_CHANGE_REQUIRED,
                  - 2     # INVALID_CREDENTIALS,
                  - 3     # PASSWORD_ALREADY_USED,
                  - 4     # USERNAME_PENDING_VERIFICATION,
                  - 5     # PASSWORD_INVALID,
                  - 6     # INTERNAL_ERROR,
                  - 7     # ACCESS_DENIED,
                  - 8     # INVALID_TOKEN
              ErrorDetails:
                type: string
              ErrorDescription:
                type: string

    Success:
      description: The requested operation was performed.
      content:
        application/json:
          schema:
            properties:
              Operation:
                type: string
              Details:
                type: string
              Code:
                type: integer
    Error:
      description: The requested operation was performed.
      content:
        application/json:
          schema:
            properties:
              Operation:
                type: string
              Details:
                type: string
              Code:
                type: integer
    BadRequest:
      description: The requested operation was performed.
      content:
        application/json:
          schema:
            properties:
              Operation:
                type: string
              Details:
                type: string
              Code:
                type: integer

  schemas:
    HomeDeviceMode:
      type: object
      properties:
        type:
          type: string
          enum:
            - bridge
            - manual
            - automatic
          default: automatic
        enableLEDS:
          type: boolean
          default: true
        subnet:
          type: string
          format: ipv4
        subnetMask:
          type: string
          format: ipv4
        startIP:
          type: string
          format: ipv4
        endIP:
          type: string
          format: ipv4
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64

    IPReservation:
      type: object
      properties:
        nickname:
          type: string
        ipAddress:
          type: string
          format: ipv4
        macAddress:
          type: string
          format: mac-address

    IPReservationList:
      type: object
      properties:
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/IPReservation'

    DnsConfiguration:
      type: object
      properties:
        ISP:
          type: boolean
        custom:
          type: boolean
        primary:
          type: string
          format: ipv4
        seconfary:
          type: string
          format: ipv4

    InternetConnection:
      type: object
      properties:
        type:
          type: string
          enum:
            - manual
            - pppoe
            - automatic
        username:
          type: string
        password:
          type: string
        ipAddress:
          type: string
          format: ipv4
        subnetMask:
          type: string
          format: ipv4
        defaultGateway:
          type: string
          format: ipv4
        primaryDns:
          type: string
          format: ipv4
        secondaryDns:
          type: string
          format: ipv4
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64

    WifiNetwork:
      type: object
      properties:
        type:
          type: string
          enum:
            - main
            - guest
        name:
          type: string
        password:
          type: string
        encryption:
          type: string
        bands:
          type: array
          items:
            type: string
            enum:
              - 2G
              - 5G
              - 5GL
              - 5GU
              - 6G

    WifiNetworkList:
      type: object
      properties:
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64
        networks:
          type: array
          items:
            $ref: '#/components/schemas/WifiNetwork'

    AccessTime:
      type: object
      properties:
        description:
          type: string
        day:
          type: string
        rangeList:
          type: array
          items:
            type: string

    AccessTimes:
      type: object
      properties:
        description:
          type: string
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/AccessTime'

    SubscriberDevice:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        macAddress:
          type: string
        manufacturer:
          type: string
        firstContact:
          type: integer
          format: int64
        lastContact:
          type: integer
          format: int64
        group:
          type: string
        icon:
          type: string
          format: uuid
        suspended:
          type: boolean
        ip:
          type: string
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64
        schedule:
          $ref: '#/components/schemas/AccessTimes'

    SubscriberDeviceList:
      type: object
      properties:
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64
        devices:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberDevice'

    Association:
      type: object
      properties:
        name:
          type: string
        ssid:
          type: string
        macAddress:
          type: string
        rssi:
          type: integer
        power:
          type: integer
        ipv4:
          type: string
        ipv6:
          type: integer
        tx:
          type: integer
        rx:
          type: integer

    AssociationList:
      type: object
      properties:
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64
        associations:
          type: array
          items:
            $ref: '#/components/schemas/Association'

    Client:
      type: object
      properties:
        macAddress:
          type: string
        speed:
          type: string
        mode:
          type: string
        ipv4:
          type: string
        ipv6:
          type: integer
        tx:
          type: integer
        rx:
          type: integer

    ClientList:
      type: object
      properties:
        created:
          type: integer
          format: int64
          readOnly: true
        modified:
          type: integer
          format: int64
          readOnly: true
        clients:
          type: array
          items:
            $ref: '#/components/schemas/Client'

    Location:
      type: object
      properties:
        buildingName:
          type: string
        addressLines:
          type: array
          items:
            type: string
        city:
          type: string
        state:
          type: string
        postal:
          type: string
        country:
          type: string
        phones:
          type: array
          items:
            type: string
        mobiles:
          type: array
          items:
            type: string

    AccessPoint:
      type: object
      properties:
        macAddress:
          type: string
        name:
          type: string
        id:
          type: string
          format: uuid
        address:
          $ref: '#/components/schemas/Location'

    AccessPointList:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/AccessPoint'

    SubscriberInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        userId:
          type: string
          format: uuid
          readOnly: true
        firstName:
          type: string
        initials:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        secondaryEmail:
          type: string
          format: email
        accessPoints:
          readOnly: true
          $ref: '#/components/schemas/AccessPointList'
        serviceAddress:
          $ref: '#/components/schemas/Location'
        billingAddress:
          $ref: '#/components/schemas/Location'
        created:
          type: integer
          format: int64
          readOnly: true
        modified:
          type: integer
          format: int64
          readOnly: true

    PasswordChange:
      type: object
      properties:
        oldPassword:
          type: string
          format: password
        newPassword:
          type: string
          format: password

    PasswordCreation:
      type: object
      properties:
        newPassword:
          type: string
          format: password

    MFAChallengeRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        question:
          type: string
        created:
          type: integer
          format: integer64
        method:
          type: string

    MFAChallengeResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        answer:
          type: string

    WebTokenRequest:
      description: User Id and password.
      type: object
      required:
        - userId
        - password
      properties:
        userId:
          type: string
          default: support@example.com
        password:
          type: string
          default: support
        newPassword:
          type: string
          default: support
        refreshToken:
          type: string
      example:
        userId: support@example.com
        password: support

    WebTokenResult:
      description: Login and Refresh Tokens to be used in subsequent API calls.
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
          format: int32
        idle_timeout:
          type: integer
          format: int32
        username:
          type: string
        created:
          type: integer
          format: int64
        userMustChangePassword:
          type: boolean
        errorCode:
          type: integer     # 0 = no error, 1 = passwordAlreadyUsed, 2=invalidPassword
        aclTemplate:
          $ref: '#/components/schemas/WebTokenAclTemplate'

    AclTemplate:
      type: object
      properties:
        Read:
          type: boolean
        ReadWrite:
          type: boolean
        ReadWriteCreate:
          type: boolean
        Delete:
          type: boolean
        PortalLogin:
          type: boolean

    WebTokenAclTemplate:
      type: object
      properties:
        aclTemplate:
          $ref: '#/components/schemas/AclTemplate'


paths:
  /oauth2:
    post:
      tags:
        - Authentication
      summary: Get access token - to be used as Bearer token header for all other API requests.
      operationId: getAccessToken
      parameters:
        - in: query
          name: newPassword
          description: used when a user is trying to change her password. This will be the new password.
          schema:
            type: string
          required: false
        - in: query
          name: forgotPassword
          description: A user forgot her password. She needs to present her e-mail address in the userId and set this to true
          schema:
            type: boolean
          required: false
        - in: query
          name: requirements
          description: A user forgot her password. She needs to present her e-mail address in the userId and set this to true
          schema:
            type: boolean
          required: false
        - in: query
          name: resendMFACode
          schema:
            type: boolean
          required: false
        - in: query
          name: completeMFAChallenge
          schema:
            type: boolean
          required: false
      requestBody:
        description: User id and password
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/WebTokenRequest'
                - $ref: '#/components/schemas/MFAChallengeResponse'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/WebTokenResult'
                  - $ref: '#/components/schemas/MFAChallengeRequest'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

  /oauth2/{token}:
    delete:
      tags:
        - Authentication
      summary: Revoke a token.
      operationId: removeAccessToken
      parameters:
        - in: path
          name: token
          schema:
            type:
              string
          required: true
      responses:
        204:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Success'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

  /accessPoints:
    get:
      tags:
        - Access Points
      summary: Retrieve information about user devices
      operationId: getSubscriberAccessPointList
      responses:
        200:
          $ref: '#/components/schemas/AccessPointList'
    post:
      tags:
        - Access Points
      summary: Add/register a new device for a subscriber
      operationId: addSubscriberAccessPoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPoint'
      responses:
        200:
          $ref: '#/components/schemas/AccessPointList'
        400:
          $ref: '#/components/responses/BadRequest'
    put:
      tags:
        - Access Points
      summary: Modify an existing device for a subscriber
      operationId: modifySubscriberAccessPoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPoint'
      responses:
        200:
          $ref: '#/components/schemas/AccessPointList'
        400:
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Access Points
      summary: Delete an access point that is no longer in use.
      operationId: deleteSubscriberAccessPoint
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /subscriber:
    get:
      tags:
        - Subscriber Information
      summary: Get the information about the subscriber
      operationId: getSubscriberInfo
      responses:
        200:
          $ref: '#/components/schemas/SubscriberInfo'
    put:
      tags:
        - Subscriber Information
      summary: Modify the information stored about the subscriber
      operationId: modifySubscriberInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberInfo'
      responses:
        200:
          $ref: '#/components/schemas/SubscriberInfo'
        400:
          $ref: '#/components/responses/Error'

  /internetConnection:
    get:
      tags:
        - Internet Connection
      summary: Read the current internet connection settings
      operationId: getInternetConnectionSettings
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: default
          schema:
            type: boolean
            default: false
          required: false
      responses:
        200:
          $ref: '#/components/schemas/InternetConnection'

    put:
      tags:
        - Internet Connection
      summary: Modify the current internet connection settings
      operationId: modifyInternetConnectionSettings
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: reset
          schema:
            type: boolean
            default: false
          required: false
      requestBody:
        description: Information used to modify the current internet connection settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternetConnection'

      responses:
        200:
          $ref: '#/components/schemas/InternetConnection'
        400:
          $ref: '#/components/responses/BadRequest'

  /homeDeviceMode:
    get:
      tags:
        - Device Mode
      summary: Read the Home Device Mode
      operationId: getHomeDeviceMode
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: default
          schema:
            type: boolean
            default: false
          required: false
      responses:
        200:
          $ref: '#/components/schemas/HomeDeviceMode'
    put:
      tags:
        - Device Mode
      summary: Modify the current device mode settings
      operationId: modifyHomeDeviceMode
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: reset
          schema:
            type: boolean
            default: false
          required: false
      requestBody:
        description: Information used to modify the current device mode settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeDeviceMode'
      responses:
        200:
          $ref: '#/components/schemas/HomeDeviceMode'
        400:
          $ref: '#/components/responses/BadRequest'

  /ipReservations:
    get:
      tags:
        - IP Reservations
      summary: Retreive the list of IP Reservations
      operationId: getIPReservationList
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: Successfully retrieved list of IP Reservations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPReservationList'
    put:
      tags:
        - IP Reservations
      summary: Add A new IP reservation
      operationId: addIPReservation
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: replace
          schema:
            type: boolean
            default: false
          required: false
      requestBody:
        description: List of IP reservations to maintain for this device.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPReservationList'
      responses:
        200:
          description: Reservations modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPReservationList'
        400:
          $ref: '#/components/responses/BadRequest'

    delete:
      tags:
        - IP Reservations
      summary: Delete an IP Reservation
      operationId: deleteIPReservation
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: macAddress
          schema:
            type: string
            format: mac-address
          required: false
        - in: query
          name: name
          schema:
            type: string
          required: false
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          $ref: '#/components/responses/BadRequest'

  /wifiNetworks:
    get:
      tags:
        - WiFi Networks
      summary: Get the list of defined WiFI networks
      operationId: getWifiNetworks
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: default
          schema:
            type: boolean
            default: false
          required: false
      responses:
        200:
          description: Succesfully get the list of WiFI networks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WifiNetwork'

    put:
      tags:
        - WiFi Networks
      summary: Update the list of WiFi networks
      operationId: modifyWiFiNetworks
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: reset
          schema:
            type: boolean
            default: false
          required: false
      responses:
        200:
          description: Succesfully get the list of WiFI networks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WifiNetwork'
        400:
          $ref: '#/components/responses/BadRequest'

  /wiredClients:
    get:
      tags:
        - Clients
      summary: Get the list of wired clients
      operationId: getWiredClients
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: Successfully retrieved client list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientList'

  /wifiClients:
    get:
      tags:
        - WiFi Clients
      summary: Get the list of wired clients
      operationId: getWifiClients
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: Successfully retrieved client list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationList'

  /subscriberDevices:
    get:
      tags:
        - Subscriber Devices
      summary: Get the list of subscriber devices
      operationId: getSubscriberDevices
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: Successfully retrieve subscriber devices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberDeviceList'
    put:
      tags:
        - Subscriber Devices
      summary: Update the list of subscriber devices
      operationId: modifySubscriberDevices
      parameters:
        - in: query
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: reset
          schema:
            type: boolean
            default: false
          required: false
      requestBody:
        description: List of devices
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberDeviceList'
      responses:
        200:
          description: Successfully updated the list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberDeviceList'
        400:
          $ref: '#/components/responses/BadRequest'

  /login:
    post:
      tags:
        - Access Process
      summary: User is requesting a signup for a new user ID
      operationId: userSignUp
      parameters:
        - in: query
          name: action
          required: true
          schema:
            type: string
            enum:
              - signUp
              - verifyEmail
              - forgotPassword
              - setpassword
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
        - in: query
          name: id
          required: false
          schema:
            type: string
            format: uuid
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PasswordChange'
                - $ref: '#/components/schemas/PasswordCreation'
      responses:
        200:
          description: signup in progress
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  error:
                    type: string
                  errorCode:
                    type: integer
        400:
          $ref: '#/components/responses/BadRequest'
