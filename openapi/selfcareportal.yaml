openapi: 3.0.1
info:
  title: OpenWiFi Portal Model
  description: API describing User Self Care interaction with OpenWifi.
  version: 2.1.0
  license:
    name: BSD3
    url: https://github.com/Telecominfraproject/wlan-cloud-ucentralgw/blob/master/LICENSE

servers:
  - url: 'https://localhost:16005/api/v1'

security:
  - bearerAuth: []
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            properties:
              ErrorCode:
                type: integer
              ErrorDetails:
                type: string
              ErrorDescription:
                type: string

    Unauthorized:
      description: The requested does not have sufficient rights to perform the operation.
      content:
        application/json:
          schema:
            properties:
              ErrorCode:
                type: integer
              ErrorDetails:
                type: string
              ErrorDescription:
                type: string

    Success:
      description: The requested operation was performed.
      content:
        application/json:
          schema:
            properties:
              Operation:
                type: string
              Details:
                type: string
              Code:
                type: integer
    BadRequest:
      description: The requested operation was performed.
      content:
        application/json:
          schema:
            properties:
              Operation:
                type: string
              Details:
                type: string
              Code:
                type: integer

  schemas:
    AccessTime:
      type: object
      properties:
        day:
          type: string
        rangeList:
          type: array
          items:
            type: string

    AccessTimes:
      type: object
      properties:
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/AccessTime'

    SubscriberDevice:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        macAddress:
          type: string
        manufacturer:
          type: string
        firstContact:
          type: integer
          format: int64
        lastContact:
          type: integer
          format: int64
        group:
          type: string
        icon:
          type: string
          format: uuid
        suspended:
          type: boolean
        ip:
          type: string
        schedule:
          $ref: '#/components/schemas/AccessTimes'

    SubscriberDeviceList:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberDevice'

    Association:
      type: object
      properties:
        macAddress:
          type: string
        rssi:
          type: integer
        power:
          type: integer
        ipv4:
          type: string
        ipv6:
          type: integer
        tx:
          type: integer
        rx:
          type: integer

    AssociationList:
      type: object
      properties:
        associations:
          type: array
          items:
            $ref: '#/components/schemas/Association'

    Client:
      type: object
      properties:
        macAddress:
          type: string
        speed:
          type: string
        mode:
          type: string
        ipv4:
          type: string
        ipv6:
          type: integer
        tx:
          type: integer
        rx:
          type: integer

    ClientList:
      type: object
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/Client'

    DeviceMode:
      type: object
      required:
        - mode
        - country
      properties:
        mode:
          type: string
          enum:
            - ap
            - bridge
            - mesh
        country:
          type: string
          minLength: 2
          maxLength: 2
        lastChange:
          type: integer
          format: int64
          readOnly: true

    BroadbandConnectionDisabled:
      type: object
      properties:
        disabled:
          type: boolean
          default: true

    BroadbandConnectionPPOE:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          type: string
        password:
          type: string

    BroadbandConnectionWWAN:
      type: object
      required:
        - modemType
        - userName
        - password
      properties:
        modemType:
          type: string
          enum:
            - qmi
            - mbim
            - wwan
        accessPointName:
          type: string
        authenticationType:
          type: string
          enum:
            - none
            - pap
            - chap
            - pap-chap
          default: none
        pinCode:
          type: string
        userName:
          type: string
        password:
          type: string
        packetDataProtocol:
          type: string
          enum:
            - ipv4
            - ipv6
            - dual-stack
          default: dual-stack

    ExternalInterface:
      type: object
      properties:
        ethernet:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
            selectedPorts:
              type: array
              items:
                type: string
                enum:
                  - LAN1
                  - LAN2
                  - LAN3
                  - LAN4
                  - LAN*
                  - WAN*
                  - "*"
                default: WAN*
            multicast:
              type: boolean
              default: true
            learning:
              type: boolean
              default: true
            isolate:
              type: boolean
              default: true
            macaddr:
              type: string
              format: uc-mac
            reversePathFilter:
              type: boolean
              default: false
            vlanTag:
              type: string
              enum:
                - tagged
                - un-tagged
                - auto
              default: auto
        ipv4:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
            addressing:
              type: string
              enum:
                - dynamic
                - static
            staticInfo:
              type: object
              properties:
                subnet:
                  type: string
                  format: uc-cidr4
                  example:
                    - "auto/24"
                    - "192.168.1.0/24"
                gateway:
                  type: string
                  format: ipv4
                sendHostname:
                  type: boolean
                  default: true
                useDns:
                  type: array
                  items:
                    type: string
                    format: ipv4
        ipv6:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
            addressing:
              type: string
              enum:
                - dynamic
                - static
            staticInfo:
              type: object
              properties:
                subnet:
                  type: string
                  format: uc-cidr6
                  example:
                    - "auto/64"
                gateway:
                  type: string
                  format: ipv6
                prefixSize:
                  type: integer
                  minimum: 0
                  maximum: 64
        connection:
          type: object
          oneOf:
            - $ref: '#/components/schemas/BroadbandConnectionPPOE'
            - $ref: '#/components/schemas/BroadbandConnectionWWAN'
            - $ref: '#/components/schemas/BroadbandConnectionDisabled'
        lastChange:
          type: integer
          format: int64
          readOnly: true

    ChannelNumber:
      type: object
      properties:
        channelNumber:
          type: integer
          minimum: 1
          maximum: 171
        auto:
          type: boolean
          default: true

    RadioConfiguration:
      type: object
      properties:
        radio2g:
          type: object
          properties:
            enabled:
              type: boolean
              default: true
            bandwidth:
              type: integer
              enum:
                - 5
                - 10
                - 20
            channelMode:
              type: string
              enum:
                - HT
                - VHT
                - HE
            channelWidth:
              type: integer
              enum:
                - 20
                - 40
                - 80
                - 160
              default: 80
            txPower:
              type: integer
              minimum: 0
              maxLength: 30
            legacyRates:
              type: boolean
              default: false
            beaconInterval:
              type: integer
              minimum: 15
              maximum: 65535
              default: 100
            dtimPeriod:
              type: integer
              default: 2
              minimum: 1
              maximum: 255
            maxClients:
              type: integer
              minimum: 0
              maximum: 255
              default: 64
            rates:
              type: object
              properties:
                beacon:
                  type: integer
                  default: 6000
                  enum:
                    - 0
                    - 1000
                    - 2000
                    - 5500
                    - 6000
                    - 9000
                    - 11000
                    - 12000
                    - 18000
                    - 24000
                    - 36000
                    - 48000
                    - 54000
                multicast:
                  type: integer
                  default: 24000
                  enum:
                    - 0
                    - 1000
                    - 2000
                    - 5500
                    - 6000
                    - 9000
                    - 11000
                    - 12000
                    - 18000
                    - 24000
                    - 36000
                    - 48000
                    - 54000
            heSettings:
              type: object
              properties:
                multipleBssid:
                  type: boolean
                  default: false
                ema:
                  type: boolean
                  default: false
                bssColor:
                  type: integer
                  default: 64
            channel:
              $ref: '#/components/schemas/ChannelNumber'
        radio5g:
          type: object
          properties:
            enabled:
              type: boolean
              default: true

      InternalInterface:
        type: object
        properties:


    #########################################################################################
    ##
    ## These are endpoints that all services in the OPenWiFI stack must provide
    ##
    #########################################################################################
    AnyPayload:
      type: object
      properties:
        Document:
          type: string

    StringList:
      type: object
      properties:
        list:
          type: array
          items:
            type: string

    TagValuePair:
      type: object
      properties:
        tag:
          type: string
        value:
          type: string

    TagValuePairList:
      type: object
      properties:
        tagList:
          type: array
          items:
            $ref: '#/components/schemas/TagValuePair'

    TagIntPair:
      type: object
      properties:
        tag:
          type: string
        value:
          type: integer
          format: int64

    TagIntPairList:
      type: object
      properties:
        tagList:
          type: array
          items:
            $ref: '#/components/schemas/TagIntPair'

    SystemCommandDetails:
      type: object
      properties:
        command:
          type: string
          enum:
            - setloglevels
            - getloglevels
            - getSubSystemNames
            - getLogLevelNames
            - stats
        parameters:
          oneOf:
            - $ref: '#/components/schemas/StringList'
            - $ref: '#/components/schemas/TagValuePairList'

    SystemCommandResults:
      type: object
      oneOf:
        - $ref: '#/components/schemas/StringList'
        - $ref: '#/components/schemas/TagValuePairList'

    NoteInfo:
      type: object
      properties:
        created:
          type: integer
          format: int64
        createdBy:
          type: string
        note:
          type: string

    SystemInfoResults:
      type: object
      properties:
        version:
          type: string
        uptime:
          type: integer
          format: integer64
        start:
          type: integer
          format: integer64
        os:
          type: string
        processors:
          type: integer
        hostname:
          type: string
        certificates:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
              expires:
                type: integer
                format: int64

    Dashboard:
      type: object
      properties:
        snapshot:
          type: integer
          format: int64
        tenants:
          $ref: '#/components/schemas/TagIntPairList'

    SystemCommandSetLogLevel:
      type: object
      properties:
        command:
          type: string
          enum:
            - setloglevel
        subsystems:
          type: array
          items:
            $ref: '#/components/schemas/TagValuePair'

    SystemCommandReload:
      type: object
      properties:
        command:
          type: string
          enum:
            - reload
        subsystems:
          type: array
          items:
            type: string
            example: these are the SubSystems names retrieve with the GetSubSystemsNamesResult.

    SystemCommandGetLogLevels:
      type: object
      properties:
        command:
          type: string
          enum:
            - getloglevels

    SystemGetLogLevelsResult:
      type: object
      properties:
        taglist:
          type: array
          items:
            $ref: '#/components/schemas/TagValuePair'

    SystemCommandGetLogLevelNames:
      type: object
      properties:
        command:
          type: string
          enum:
            - getloglevelnames

    SystemCommandGetSubsystemNames:
      type: object
      properties:
        command:
          type: string
          enum:
            - getsubsystemnames

    SystemCommandGetLogLevelNamesResult:
      type: object
      properties:
        list:
          type: array
          items:
            type: string

    SystemGetSubSystemNamesResult:
      type: object
      properties:
        taglist:
          type: array
          items:
            $ref: '#/components/schemas/TagValuePair'

paths:
  /deviceMode:
    get:
      summary: retrieve the current mode of the access point
      tags:
        - interface
      operationId: getDeviceMode
      responses:
        200:
          $ref: '#/components/schemas/DeviceMode'
        400:
          $ref: '#/components/responses/BadRequest'
    put:
      summary: update the device mode
      tags:
        - interface
      operationId: modifyDeviceMode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceMode'
      responses:
        200:
          $ref: '#/components/schemas/DeviceMode'
        400:
          $ref: '#/components/responses/BadRequest'

  /externalInterface:
    get:
      summary: Retrieve the current external interface configuration.
      operationId: getExternalInterface
      tags:
        - interfaces

      responses:
        200:
          $ref: '#/components/schemas/ExternalInterface'
    put:
      summary: Modify the current external interface configuration.
      operationId: modifyExternalInterface
      tags:
        - interfaces
      parameters:
        - in: query
          name: default
          schema:
            type: boolean
          required: false
      requestBody:
        description: Information used to modify the external interface
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalInterface'
      responses:
        200:
          $ref: '#/components/schemas/ExternalInterface'
        400:
          $ref: '#/components/responses/BadRequest'

  /internalInterface:
    get:
      summary: Retrieve the internal interface definitions.
      operationId: getInternalInterface
      tags:
        - interfaces
      responses:
        200: '#/components/schemas/InternalInterface'
    put:
      summary: Modify the current internal interface configuration.
      operationId: modifyIntertnalInterface
      tags:
        - interfaces
      parameters:
        - in: query
          name: default
          schema:
            type: boolean
          required: false
      requestBody:
        description: Information used to modify the internal interface
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalInterface'
      responses:
        200:
          $ref: '#/components/schemas/InternalInterface'
        400:
          $ref: '#/components/responses/BadRequest'

  #
  # MicroService common code
  #
  /dashboard:
    get:
      tags:
        - Dashboards
      summary: Get the last version of the dashboard
      operationId: getDeviceDashboard
      responses:
        200:
          $ref: '#/components/schemas/Dashboard'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

  /system:
    post:
      tags:
        - System Commands
      summary: Perform some system wide commands
      operationId: systemCommand
      requestBody:
        description: Command details
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SystemCommandSetLogLevel'
                - $ref: '#/components/schemas/SystemCommandReload'
                - $ref: '#/components/schemas/SystemCommandGetLogLevels'
                - $ref: '#/components/schemas/SystemCommandGetLogLevelNames'
                - $ref: '#/components/schemas/SystemCommandGetSubsystemNames'
      responses:
        200:
          description: Successfull command execution
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SystemGetLogLevelsResult'
                  - $ref: '#/components/schemas/SystemCommandGetLogLevelNamesResult'
                  - $ref: '#/components/schemas/SystemGetSubSystemNamesResult'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
    get:
      tags:
        - System Commands
      summary: Retrieve different values from the running service.
      operationId: getSystemCommand
      parameters:
        - in: query
          description: Get a value
          name: command
          schema:
            type: string
            enum:
              - info
          required: true

      responses:
        200:
          description: Successfull command execution
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SystemInfoResults'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
